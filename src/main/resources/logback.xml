<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">

    <!-- NOTICE: copy of sample configuration from d4j docs https://docs.discord4j.com/logging/#logback -->
    <!-- NOTICE: copy of sample configuration from d4j docs https://docs.discord4j.com/logging/#logback -->
    <!-- NOTICE: copy of sample configuration from d4j docs https://docs.discord4j.com/logging/#logback -->
    <!-- NOTICE: copy of sample configuration from d4j docs https://docs.discord4j.com/logging/#logback -->
    <!-- NOTICE: copy of sample configuration from d4j docs https://docs.discord4j.com/logging/#logback -->

    <logger name="io.netty" level="INFO"/>
    <logger name="reactor" level="INFO"/>

    <!-- for a list of loggers see: https://discord4j.readthedocs.io/en/latest/Logging/#v31-loggers -->
    <logger name="discord4j.core" level="DEBUG"/>

    <!-- Display the logs in your console with the following format -->
    <!-- https://logback.qos.ch/manual/layouts.html#ClassicPatternLayout -->
    <!-- https://logback.qos.ch/manual/configuration.html -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Log to a file as well, including size and time based rolling -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/d4j.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>90</maxHistory>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %-40.40logger{39} : %msg%n</Pattern>
        </encoder>
        <prudent>true</prudent>
    </appender>

    <!-- Avoid blocking while logging to file by wrapping our file appender with async capabilities -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>512</queueSize>
        <appender-ref ref="FILE"/>
    </appender>

    <!-- Here you can set the base logger level. If DEBUG is too chatty for you, you can use INFO -->
    <!-- Possible options are: ALL, TRACE, DEBUG, INFO, WARN, ERROR, OFF -->
    <root level="DEBUG">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ASYNC"/>
    </root>
</configuration>